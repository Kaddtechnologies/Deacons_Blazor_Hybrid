trigger:
  branches:
    include:
      - main
      - development

pool:
  vmImage: 'windows-latest' # Choose an appropriate agent with required tools installed

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x' # Use the appropriate .NET SDK version

  - task: CmdLine@2
    displayName: 'Install Maui Workload'
    inputs:
     script: 'dotnet workload install maui'

  - task: DotNetCoreCLI@2
    displayName: 'Build IOS Binaries'
    inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/Deacons.Hybrid.Mobile.csproj'
        arguments: '-f:net8.0-ios -c:Release /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false /p:RuntimeIdentifier=ios-arm64 /p:BuildIpa=true /p:Codesignkey="$(APPLE_CERTIFICATE_SIGNING_IDENTITY)" /p:CodesignProvision="$(APPLE_PROV_PROFILE_UUID)"'
        zipAfterPublish: false
        
  - task: CopyFiles@2
    displayName: 'Copy file from Build to Staging'
    inputs:
        SourceFolder: '$(Agent.BuildDirectory)'
        Contents: '**/*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
        OverWrite: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish the Staging Files.'
    inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
  - script: |
      npm install -g firebase-tools
      firebase login:ci --interactive
      firebase appdistribution:distribute '$(System.ArtifactsDirectory)/BuildOutput/app-release.apk'
    displayName: 'Upload to Firebase App Distribution'
