# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'macOS-13'
  demands: xcode


steps:
- task: PowerShell@2
  displayName: 'Select Xcode Version'
  inputs:
    targetType: 'inline'
    script: 'sudo xcode-select -s /Applications/Xcode_15.0.1.app'

- task: UseDotNet@2
  displayName: 'Install .NET sdk'
  inputs:
    packageType: sdk
    version: 8.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: CmdLine@2
  displayName: 'Install Maui Workload'
  inputs:
    script: 'dotnet workload install maui'
    
- task: InstallAppleCertificate@2
  displayName: 'Install Apple P12 Cert'
  inputs:
    certSecureFile: 'CAS-Dist.p12'
    certPwd: '$(p12CertPWD)'
    keychain: 'temp'
- task: InstallAppleProvisioningProfile@1
  displayName: 'Install Apple Provisioning Profile'
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'DeaconsAdminProvision.mobileprovision'
   
- task: DotNetCoreCLI@2
  displayName: 'Build IOS Binaries'
  inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/Deacons.Hybrid.Mobile.csproj'
        arguments: '-f:net8.0-ios -c:Release /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false /p:RuntimeIdentifier=ios-arm64 /p:BuildIpa=true /p:Codesignkey="$(APPLE_CERTIFICATE_SIGNING_IDENTITY)" /p:CodesignProvision="$(APPLE_PROV_PROFILE_UUID)"'
        zipAfterPublish: false
        
- task: CopyFiles@2
  displayName: 'Copy file from Build to Staging'
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish the Staging Files.'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'